variables:
  CI_REGISTRY_URL: docker-registry.lab.nordigy.ru
  IMAGE_NAME: ${CI_REGISTRY_URL}/ptsd/ptsd

stages:
  - prepare
  - test
  - build
  - tag

"Calculate tag":
  stage: prepare
  image: python:3.9.8-alpine
  tags:
    - lab
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
  before_script:
    - apk add git
  script:
    - latest_tag=$(git describe --tags --abbrev=0 || true)
    - python .gitlab/semver.py $latest_tag
  artifacts:
    reports:
      dotenv: tag.env

"Unit tests":
  stage: test
  image: python:3.9.8-bullseye
  tags:
    - lab
  before_script:
    - pip install -r requirements.txt
  script:
    - pytest --junitxml=test_report.xml
  artifacts:
    when: always
    reports:
      junit: test_report.xml

"Build docker image":
  stage: build
  image: docker:20.10.10
  tags:
    - lab
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
  dependencies:
    - "Calculate tag"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_URL
  script:
    - docker build -t ${IMAGE_NAME}:${NEW_TAG} .
    - docker push ${IMAGE_NAME}:${NEW_TAG}

"Update tag":
  stage: tag
  image: alpine
  tags:
    - lab
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
  dependencies:
    - "Calculate tag"
  before_script:
    - apk add git
    - git config --global user.email "rcv-devops@nordigy.ru"
    - git config --global user.name "Gitlab CI"
    - git remote set-url origin https://${CI_GIT_USER}:${CI_GIT_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git
  script:
    - git tag -a ${NEW_TAG} -m "[CI] Add new tag ${NEW_TAG}"
    - git push --tags -vvv
