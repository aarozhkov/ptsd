variables:
  CI_REGISTRY_URL: docker-registry.lab.nordigy.ru

stages:
  - test
  - build
  - tag

"Calculate tag":
  stage: .pre
  image: python:3.9.8-alpine
  tags:
    - lab
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
  before_script:
    - apk add git
  script:
    - latest_tag=$(git describe --tags --abbrev=0 || true)
    - python .gitlab/semver.py $latest_tag
  artifacts:
    reports:
      dotenv: tag.env

"Validate helmcharts":
  stage: test
  image: alpine/helm:3.7.1
  tags:
    - lab
  script:
    - cd helm/apps
    - |
      for d in values/*; do
          helm template . --values="${d}" > /dev/null
          echo "$d"
      done

"Unit tests":
  stage: test
  image: python:3.9.8-bullseye
  tags:
    - lab
  before_script:
    - pip install -r requirements.txt
  script:
    - pytest --junitxml=test_report.xml
  artifacts:
    when: always
    reports:
      junit: test_report.xml
  allow_failure: true  # Temporary allow test falure

.build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  tags:
    - lab
  dependencies:
    - "Calculate tag"
  before_script:
    - echo "{\"auths\":{\"${CI_REGISTRY_URL}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/${DOCKERFILE}"
      --destination "${IMAGE_NAME}:${NEW_TAG}"
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/${DOCKERFILE}"
      --destination "${IMAGE_NAME}:latest"

"Build adapter image":
  extends: .build
  variables:
    IMAGE_NAME: ${CI_REGISTRY_URL}/ptsd/adapter
    DOCKERFILE: adapter/Dockerfile
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - requirements.txt
        - adapter/Dockerfile
        - shared/**/*
        - adapter/**/*

"Build scheduler image":
  extends: .build
  variables:
    IMAGE_NAME: ${CI_REGISTRY_URL}/ptsd/scheduler
    DOCKERFILE: scheduler/Dockerfile
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - requirements.txt
        - scheduler/Dockerfile
        - shared/**/*
        - scheduler/**/*

"Build status image":
  extends: .build
  variables:
    IMAGE_NAME: ${CI_REGISTRY_URL}/ptsd/status
    DOCKERFILE: status/Dockerfile
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - requirements.txt
        - status/Dockerfile
        - shared/**/*
        - status/**/*

"Build supervisor image":
  extends: .build
  variables:
    IMAGE_NAME: ${CI_REGISTRY_URL}/ptsd/supervisor
    DOCKERFILE: supervisor/Dockerfile
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - requirements.txt
        - supervisor/Dockerfile
        - shared/**/*
        - supervisor/**/*

"Update repo tag":
  stage: tag
  image: alpine
  tags:
    - lab
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
  dependencies:
    - "Calculate tag"
  before_script:
    - apk add git
    - git config --global user.email "rcv-devops@nordigy.ru"
    - git config --global user.name "Gitlab CI"
    - git remote set-url origin https://${CI_GIT_USER}:${CI_GIT_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git
  script:
    - git tag -a ${NEW_TAG} -m "[CI] Add new tag ${NEW_TAG}"
    - git push --tags -vvv
